generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model admin {
  id       Int    @id @default(autoincrement())
  passcode String
}

model effect_tag_deps {
  id                                       Int  @id @default(autoincrement())
  form_tag_id                              Int
  effect_tag_id                            Int
  tags_effect_tag_deps_effect_tag_idTotags tags @relation("effect_tag_deps_effect_tag_idTotags", fields: [effect_tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tags_effect_tag_deps_form_tag_idTotags   tags @relation("effect_tag_deps_form_tag_idTotags", fields: [form_tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model explainer_blocks {
  id           Int        @id @default(autoincrement())
  content      String
  explainer_id Int
  type         String
  explainers   explainers @relation(fields: [explainer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model explainers {
  id               Int                @id @default(autoincrement())
  title            String
  text             String
  stage            Int
  dependency       Int?
  dependency_type  String?
  explainer_blocks explainer_blocks[]
}

model images {
  id           Int    @id @default(autoincrement())
  url          String
  rarity_index Int
  form_tag_id  Int
  tags         tags   @relation(fields: [form_tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mutually_exclusive_effect_tags {
  first_tag                                            Int
  second_tag                                           Int
  tags_mutually_exclusive_effect_tags_second_tagTotags tags @relation("mutually_exclusive_effect_tags_second_tagTotags", fields: [second_tag], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tags_mutually_exclusive_effect_tags_first_tagTotags  tags @relation("mutually_exclusive_effect_tags_first_tagTotags", fields: [first_tag], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([first_tag, second_tag])
  @@index([second_tag], map: "mutually_exclusive_effect_tags_second_tag_index")
  @@index([first_tag], map: "mutually_exclusive_effect_tags_first_tag_index")
}

model tags {
  id                                                                             Int                              @id @default(autoincrement())
  name                                                                           String
  is_form                                                                        Int
  cost_value                                                                     Int?
  cost_takes_all                                                                 Int
  min_rarity_id                                                                  Int
  description                                                                    String
  item_name                                                                      String
  tool_id                                                                        Int
  summon_bonus_spd                                                               Int?
  summon_bonus_ac                                                                Int?
  effect_tag_deps_effect_tag_deps_effect_tag_idTotags                            effect_tag_deps[]                @relation("effect_tag_deps_effect_tag_idTotags")
  effect_tag_deps_effect_tag_deps_form_tag_idTotags                              effect_tag_deps[]                @relation("effect_tag_deps_form_tag_idTotags")
  images                                                                         images[]
  mutually_exclusive_effect_tags_mutually_exclusive_effect_tags_second_tagTotags mutually_exclusive_effect_tags[] @relation("mutually_exclusive_effect_tags_second_tagTotags")
  mutually_exclusive_effect_tags_mutually_exclusive_effect_tags_first_tagTotags  mutually_exclusive_effect_tags[] @relation("mutually_exclusive_effect_tags_first_tagTotags")
  tools                                                                          tools                            @relation(fields: [tool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tier_info {
  id      Int       @id @default(autoincrement())
  ip_cost Int
  dc_min  Int
  dc_max  Int?
  time    Int
  color   String
  tags    Int
  name    String    @default("Placeholder")
  summons summons[]
}

model tools {
  id         Int     @id @default(autoincrement())
  name       String
  emoji      String?
  summonType String?
  tags       tags[]
}

model summons {
  id            Int       @id @default(autoincrement())
  hp            Int
  spd           Int
  ac            Int
  str           Int
  dex           Int
  con           Int
  cha           Int
  int           Int
  wis           Int
  rarity_id     Int
  name          String
  type          String
  atk           String
  creature_type String    @default("spirit")
  tier_info     tier_info @relation(fields: [rarity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
